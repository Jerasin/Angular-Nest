version: '3'
services:
  base:
    image: jerasin/base-angular-nest:1.0
    build: 
      context: .
      dockerfile: docker/base.Dockerfile
      target: base-stage
    command: /bin/true
  api:
    build:
      context: .
      dockerfile: docker/api.dev.Dockerfile
      target: runtime-stage
    container_name: api 
    restart: on-failure
    # command: sh -c './docker/build-scripts/wait-for/wait-for mysql:3306 -- yarn start:api'
    env_file:
    - .env
    depends_on:
      - base
      - mysql
    # ports:
    #   - 3333:3333
    logging:
      driver: json-file
      options:
        max-size: 128m
    volumes:
      - ./apps/api/src:/app/apps/api/src
      - ./libs:/app/libs
      - ./logs:/app/logs
  web:
    build:
      context: .
      dockerfile: docker/web.dev.Dockerfile
      target: runtime-stage
    container_name: web
    restart: on-failure
    # ports:
    #   - 4200:4200
    volumes:
      - ./apps/bookstore/src:/app/apps/bookstore/src
    depends_on:
      - base
      - api
  nginx:
    build:
      context: .
      dockerfile: docker/nginx.dev.Dockerfile
    container_name: nginx
    restart: always
    ports:
      - 4200:4200
      - 3333:3333
      - 8090:8080
    depends_on:
      - api
  mysql:
    image: mysql:8.0
    container_name: api-database
    environment:
      MYSQL_DATABASE: api
      MYSQL_USER: db
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - 3306:3306
    logging:
      driver: json-file
      options:
        max-size: 128m
    volumes:
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./my-db:/var/lib/mysql:z
  adminer:
    image: adminer
    container_name: database-adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  my-db:
    driver: local
